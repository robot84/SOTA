#!/bin/bash

ERROR__CANNOT_LOAD_CONFIG_FILE=100
VERBOSE_ENABLED=no


function is_valid_locator() {
local locator_pattern="^[A-Za-z][A-Za-z][0-9][0-9][A-Za-z][A-Za-z]$"
  if [[ ! $1 =~ $locator_pattern ]]
  then
    echo "Error: $1 is not a valid locator."
	echo "locator must be 6 characters length and in format AB01CD"
    exit 1
  fi
}


function is_valid_callsign() {
local callsign_regex_pattern="([A-Za-z0-9]*/)?[A-Za-z0-9]?[A-Za-z0-9][0-9][A-Za-z][A-Za-z]*(/[A-Za-Z0-9]*)?"
  if [[ ! $1 =~ $callsign_regex_pattern ]]
  then
    echo "Error: $1 is not a valid callsign"
    exit 1
  fi
}


function print_debug_msg() {
  [ "$VERBOSE_ENABLED" = "yes" ] && echo "*** $@"
}


# f_log_msg() - Logging a message to log file
#
# Arguments: log_filename message_to_log
# Return: nothing
#
# Example; f_log_msg ../log/error.log "Error: Failure foo."
#
function f_log_msg() {
  local log_file_name="$1"
  [ ! -e ${log_file_name} ] && \
  ( mkdir -p $(dirname ${log_file_name}); touch ${log_file_name}; )
  
  local log_date=`LC_ALL=C date "+%b %e %H:%M:%S"`
  local log_host=`hostname -s`
  local log_process=$(basename $0)
  local log_pid=$BASHPID
  shift
  local log_msg="$@"
  echo "$log_date $log_host $log_process[$log_pid]: $log_msg" >> "${log_file_name}"
}


function print_version_info(){
	echo "${0##*/} $APP_VER"
		echo "Copyright (C) 2018 SO9ARC"
		echo "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
		echo "This is free software: you are free to change and redistribute it. "
		echo "There is NO WARRANTY, to the extent permitted by law."
		echo
		echo "Written by Robert Zabkiewicz SO9ARC."
#       echo "Report bugs to bug@somemail.org"
#       echo "GNU coreutils home page: <http://kamery-tatry.ovh.net/coreutils/>"
}


function if_file_exists() {
  if [ ! -r "$1" ]
  then
    echo "ERROR: Cannot open ${2:- } file for reading!"
    echo "Check if file exists and you have permissions to read it."
    echo "You tried to find: $(readlink -m $1)"
	local proposition=
 	[ -d " $(dirname $(readlink -m $1))" ] && \
	proposition=$(find $(dirname $(readlink -m $1)) -name $(basename $1) -print)
	[ ! -z $proposition ] && echo "Maybe you are looking for $proposition ?"
	proposition=
	[ -d "../$(dirname $1)" ] && \
 	proposition=$(find  ../$(dirname $1) -name $(basename $1) -print)
	[ ! -z $proposition ] && echo "Maybe you are looking for $proposition ?"
    echo "Cannot continue. Exiting..."
    exit $ERROR__CANNOT_LOAD_CONFIG_FILE
  else
    return 0
  fi
}


function if_config_file_exists() {
CONFIG_FILE="$1/../resources/config.cfg"
  if [ ! -r ${CONFIG_FILE} ]
  then
    echo "ERROR: Cannot open config file for reading!"
    echo "Check if file exists and you have permissions to read it."
    echo "Path to file: ${CONFIG_FILE}"
    echo "Cannot continue. Exiting..."
    exit $ERROR__CANNOT_LOAD_CONFIG_FILE
  else
    return 0
  fi
}


# temporary obsolete
function set_working_dir() {
  
  ACTUAL_DIR=$(pwd)
  ORIGINAL_DIR=""
  if [ "$SCRIPT_DIR" != "$ACTUAL_DIR" ]
  then
    cd "$SCRIPT_DIR"
    ORIGINAL_DIR=$ACTUAL_DIR
  fi
}


# temporary obsolete
function restore_original_dir() {
  if [ -n "$ORIGINAL_DIR" ]
  then
    cd "$ACTUAL_DIR" > /dev/null
  fi
}

function load_config_file() {
  if_config_file_exists "$1"
  .  ${CONFIG_FILE}
}


